#!/usr/bin/env bash
# wrapper script for setting wallpaper and updating pywal colors
# this requires that the last argument be the file

# other projects since pywal is dead
# - https://github.com/eylles/pywal16 - what am currently using with wpgtk
# - https://lib.rs/crates/wallust - https://github.com/deviantfero/wpgtk/issues/303
# - https://github.com/InioX/matugen
# - https://github.com/danihek/hellwal

# TODO optionally auto adjust (-A); doesn't always look great and current config
#      files don't all take advantage of different colors
# TODO optionally shuffle colors
# TODO some way to do light theme instead (may not use)
#      -l pywal, -L wpg

# * Pre-parse arguments
if [[ $1 == --theme ]]; then
	# use walset with a pre-existing theme rather than generating one from the
	# wallpaper (e.g. when using)

	# example themes:
	# base16-gruvbox-medium
	# gruvbox
	# base16-gruvbox-soft
	# base16-gruvbox-hard
	# base16-gruvbox-pale
	# base16-nord

	theme=$2
	shift 2
fi

# * Set Wallpaper
echo "Setting wallpaper"
bgset "$@" &

wallpaper=$(realpath "${@: -1}")
ln -sf "$wallpaper" ~/.cache/wallpaper

# * Update Pywal Colors
# handles terminals, polybar, xrdb
# rofi reads its config when starting, so don't need to do anything extra

# wal -n -i "${@: -1}"

echo "Generating colorscheme with wpg"
wpg -a "$wallpaper"

if [[ -n $theme ]]; then
	echo "Associating builtin theme $theme with wallpaper instead"
	wpg -Ti "$wallpaper" "$theme"
fi

echo "Applying colorscheme with wpg"
# NOTE: this command will mess up terminal output regardless of how it is run
# (and even with --no-reload)
wpg -n -s "$wallpaper" || exit 1

# * Vesktop
mkdir -p ~/.config/vesktop/themes
ln -sf ~/.cache/wal/colors-discord.css \
   ~/.config/vesktop/themes/pywal-vencord.theme.css

# * Fix Xresources
if [[ "${XDG_SESSION_TYPE}" != wayland ]]; then
	# wpg merges user .Xresources afterwards (and mine contains default colors)
	# redo colors
	echo "Re-updating .Xresources as workaround (e.g. for polybar)"
	xrdb -merge ~/.cache/wal/colors.Xresources
	pkill -USR1 -x polybar &
fi

# * Update Colors for Applications Pywal Doesn't
if [[ "${XDG_SESSION_TYPE}" != wayland ]]; then
	wm=$(get_wm)
	if [[ $wm == bspwm ]]; then
		echo "Setting bspwm colors"
		bspwm_set_wal_colors &
	elif [[ $wm == herbstluftwm ]]; then
		echo "Setting herbstluftwm colors"
		hc_set_wal_colors &
	fi

	echo "Setting Dunst colors"
	# nohup since will continue running; will not work when called from dired
	# without this
	nohup dunstrun &> /dev/null &
else
	if [[ -n $HYPRLAND_INSTANCE_SIGNATURE ]]; then
		hy_set_wal_colors
	fi
	killall -SIGUSR2 waybar
	makoctl reload
fi

# requires steam restart
echo "Setting Steam colors"
wal_steam -w &> /dev/null &

# reload emacs color scheme
echo "Setting Emacs colors"
dyn_emacsclient -a false -e t &> /dev/null \
	&& dyn_emacsclient --eval '(noct-ewal)' &> /dev/null &
sockets=(dirvish waydirvish shell-menu wayeverywhere waygnus)
for socket in "${sockets[@]}"; do
	dyn_emacsclient --socket-name="$socket" -a false -e t &> /dev/null \
		&& dyn_emacsclient --socket-name="$socket" --eval '(noct-ewal)' \
		&> /dev/null &
done

echo "Setting spotify colors"
pywal-spicetify Comfy &

# reload colors for pywalfox/firefox
echo "Setting pywalfox colors"
pywalfox update &

# reload qutebrowser config.py
if pgrep -x qutebrowser; then
	echo "Setting qutebrowser colors"
	qutebrowser ':config-source ~/.cache/wal/qutebrowser_colors.py' &
fi

# TODO would be nice to change cursor color
# https://github.com/dylanaraps/pywal/issues/197
# shellcheck disable=SC1090
# source ~/.cache/wal/colors.sh
# shellcheck disable=SC2154
# xsetroot -cursor_name heart -bg "$background" -fg "$background" &

# * Set Lockscreen
if [[ "${XDG_SESSION_TYPE}" != wayland ]]; then
	# cache for i3lock-color
	# slowest and least immediately important; start last
	echo "Setting lockscreen"
	betterlockscreen --update "$wallpaper" &
fi

# necessary to use with dired-do-async-shell-command, for example, so all
# processes complete
wait
echo "walset finished"

# https://github.com/hyprland-community/awesome-hyprland
# https://github.com/rcalixte/awesome-wayland

# Notable issues:
# might affect my setup if fixed
# https://github.com/hyprwm/Hyprland/issues/9947

# per-workspace layout
# https://github.com/hyprwm/Hyprland/issues/10293
# workaround: https://github.com/zakk4223/hyprWorkspaceLayouts
# https://github.com/hyprwm/Hyprland/discussions/7642

# block certain windows from screenshare like in Niri
# https://github.com/hyprwm/Hyprland/issues/10454

# zoom menu issue
# https://github.com/hyprwm/Hyprland/discussions/10236

# TODO automate plugin installation
# https://github.com/hyprwm/Hyprland/discussions/10469
# https://github.com/hyprwm/Hyprland/discussions/10258
# change AQ_DRM_DEVICES without restart
# https://github.com/hyprwm/Hyprland/discussions/10441

# TODO prevent focus from crossing monitors

# Try later:
# out of date with hyprland-git
# https://github.com/alexhulbert/Hyprchroma

# * Startup Commands
exec-once = wayup

# * Environment Variables
# basics except AQ_DRM_DEVICES duplicated from ~/.config/uwsm/env-hyprland in
# case need to start normally
env = LIBVA_DRIVER_NAME,nvidia
env = __GLX_VENDOR_LIBRARY_NAME,nvidia

# * Variables
source = ~/.cache/wal/colors-hyprland.conf
$mod = SUPER
$hotkey = "SUPER+CONTROL"

# * Settings
general {
  border_size = 3
  gaps_out = 15
  resize_on_border = true
  col.inactive_border = $background
  col.active_border = $color3
  # requires windowrule and fullscreen to actually tear
  allow_tearing = true

  layout = master
  # TODO
  # layout = scrolling
}

master {
  # like monocle or stacked but previous windows still visible
  new_status = master
  new_on_top = true
}

plugin:hyprscrolling {
  # default width
  column_width = 0.5
  fullscreen_on_one_column = true
}

misc {
  disable_splash_rendering = true
  disable_hyprland_logo = true
  # enable for fullscreen applications
  vrr = 2
  # I love this; default
  # initial_workspace_tracking = 1
  # disable primary
  middle_click_paste = false
  # enable_swallow = true
  # swallow_regex = ^org.wezfurlong.wezterm$
  mouse_move_focuses_monitor = false
}

ecosystem {
  no_donation_nag = true
  enforce_permissions = true
}

decoration {
  rounding = 5
  # active_opacity
  # inactive_opacity
  dim_inactive = true
  # dim_strength

  blur {
    enabled = true
    size = 4
    passes = 2
    new_optimizations = on
  }

  shadow {
    # couldn't get to look the way I want
    enabled = false
  }
}

binds {
  hide_special_on_workspace_change = true
}

input {
  repeat_delay = 300
  repeat_rate = 50
  accel_profile = flat
  follow_mouse = false
  touchpad {
    # these are default
    disable_while_typing = true
    natural_scroll = false
  }
}

cursor {
  inactive_timeout = 5
  # TODO does not seem to be an issue now that setting AQ_DRM_DEVICES correctly
  # otherwise cursor is extremely laggy on external monitor
  # https://github.com/hyprwm/Hyprland/issues/9250
  # https://github.com/hyprwm/Hyprland/issues/9324
  # no_hardware_cursors = true
}

# TODO test if causes glitches (haven't seen issues so far)
render {
  direct_scanout = 1
}

# TODO test if improves performance
# opengl {
#   nvidia_anti_flicker = false
# }

xwayland {
  # instead of having xwayland windows be blurry or pixelated
  force_zero_scaling = true
}

# * Permissions
permission = /usr/bin/grim, screencopy, allow

# * Animations
# https://wiki.hyprland.org/Configuring/Animations/
animation = workspaces, 1, 3, default, fade
animation = specialWorkspace, 1, 3, default, slidevert
# animation = specialWorkspace, 1, 3, default, slidefadevert -70%

# * Window Rules
# https://wiki.hyprland.org/Configuring/Window-Rules/
windowrule = bordercolor $color4 rgb(555555) 30deg, xwayland:1

windowrule = opacity 0.9, class:[Ee]macs

windowrule = nodim, class:^mpv$
windowrule = nodim, class:^firefox$
windowrule = nodim, class:^zoom$

# https://github.com/hyprwm/Hyprland/discussions/10236
windowrule = stayfocused, class:zoom, title:menu window

# tearing; TODO untested
windowrule = immediate, class:^(gamescope|steam_app).*

# * Monitor Handling
# put new monitors below of at highest resolution, auto scale
# monitor = , highres, auto, auto
# TODO auto scale just used 1 scaling; for now all monitors I have are 2
monitor = , highres, auto, 2

# * Reload/Quit Keybindings
bind = $hotkey, period, exec, hyprctl reload
bind = $mod, period, exec, hyprctl reload

bind = $mod+SHIFT, period, forcerendererreload
bind = SHIFT+$hotkey, period, forcerendererreload

bind = ALT+$hotkey, Escape, exec, hy_exit

# * General Keybindings
# ** Reload Keyboard Config
bind = , F11, exec, rldkanata

# ** Brightness
bind = , XF86MonBrightnessDown, exec, bright - 10
bind = , XF86MonBrightnessUp, exec, bright + 10

bind = $hotkey, n, exec, bright 1
bind = $hotkey, e, exec, bright 100

bind = $hotkey, 7, exec, hyprctl hyprsunset identity
# used to use 1900 but stopped using in part because it affects the colors so
# much, especially since I primarily use blue light blocking glasses
# this is much still lower than e.g. Iris default but is a lot more readable
bind = $hotkey, 8, exec, hyprctl hyprsunset temperature 2500

# ** Media/Volume
bind = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bind = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+

bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

# tidal shows as chromium
bind = , XF86AudioPlay, exec, playerctl --player=spotify,chromium,mopidy,mpd play-pause

# play/pause last used player (requires playerctl daemon)
bind = $hotkey, o, exec, playerctl play-pause --ignore-player=spotify,mopidy,mpd

# next/prev
# any because prev is accessed with shift
bind = , XF86AudioPrev, exec, playerctl --player=spotify,chromium,mpd previous
bind = , XF86AudioNext, exec,  playerctl --player=spotify,chromium,mpd next

bind = $hotkey, z, exec, playerctl --player=spotify,chromium,mopidy,mpd shuffle Toggle

# like in spotify; only works with spotify focused
bind = $hotkey, a, sendshortcut, SHIFT+ALT, b, class:^spotify$

bind = $hotkey, y, exec, echo async no-osd screenshot | socat - /tmp/mpvsocket

# ** Screenshots
# ~/bin/screenshot
bind = , PRINT, exec, screenshot

bind = $hotkey, q, exec, screenshot select

bind = $hotkey, w, exec, screenshot current_window

# ** Program Hotkeys
bind = $hotkey, Return, exec, wezterm start --always-new-process

bind = $hotkey+SHIFT, Return, exec, kitty

bind = $hotkey, f, exec, vfox

# backspace since can only type space on one side on external keyboard;
# backspace is in mirrored position
bind = $hotkey, space, exec, rofi -show run
bind = $hotkey, BackSpace, exec, rofi -show run

bind = $hotkey, t, exec, hc_open_app_for_tag

bind = $hotkey+ALT, t, exec, dyn_emacs --stable
bind = $hotkey+ALT, d, exec, dyn_emacs --with-demoted-errors
# use separate server to avoid binding del to delete the whole buffer in normal server
bind = $hotkey, i, exec, dyn_emacsclient --socket-name=wayeverywhere --eval "(emacs-everywhere)"

bind = $hotkey, l, exec, hyprlock

bind = $hotkey+ALT, w, exec, walrandom

# TODO warpd doesn't work

# TODO
# bind = $hotkey, a, movecursortocorner, 0
# bind = $hotkey, a, movecursor, 100 100

# banish cursor
bind = $hotkey, b, movecursor, 0 90000

bind = $hotkey+ALT, s, exec, wezterm start --always-new-process summon_shimeji
bind = $hotkey+ALT, d, exec, shimejictl dismiss --all

# ** "Dropdowns"
# alternatives:
# https://hyprland-community.github.io/pyprland/scratchpads.html
# https://github.com/Schweber/hdrop

# dropdown terminal
bind = $hotkey, s, togglespecialworkspace, wezterm
workspace = special:wezterm, on-created-empty:wezterm connect --workspace wayland unix
windowrule = float, onworkspace:name:special:wezterm, class:^org.wezfurlong.wezterm$
windowrule = move 0.9% 5%, onworkspace:name:special:wezterm, class:^org.wezfurlong.wezterm$
windowrule = size 98.2% 45%, onworkspace:name:special:wezterm, class:^org.wezfurlong.wezterm$
# open new windows outside the special workspace
windowrule = workspace +0, onworkspace:name:special:wezterm

# another terminal
bind = $hotkey, c, togglespecialworkspace, weztermlong
workspace = special:weztermlong, on-created-empty:wezterm connect --workspace waylongcommands unix
windowrule = float, onworkspace:name:special:weztermlong, class:^org.wezfurlong.wezterm$
windowrule = move 0.9% 5%, onworkspace:name:special:weztermlong, class:^org.wezfurlong.wezterm$
windowrule = size 98.2% 45%, onworkspace:name:special:weztermlong, class:^org.wezfurlong.wezterm$
# open new windows outside the special workspace
windowrule = workspace +0, onworkspace:name:special:weztermlong

bind = $hotkey, r, togglespecialworkspace, filemanager
workspace = special:filemanager, on-created-empty:wezterm start --workspace wayyazi zsh -ic "y; zsh -i"
# open new windows outside the special workspace; NOTE: not necessary with auto_hide script
# windowrule = workspace +0, onworkspace:name:special:filemanager

bind = $hotkey, d, togglespecialworkspace, dirvish
workspace = special:dirvish, on-created-empty:dyn_emacsclient --socket-name=waydirvish -ce "(noct-dirvish-frame)"
# open new windows outside the special workspace
windowrule = workspace +0, onworkspace:name:special:dirvish

bind = $hotkey, p, togglespecialworkspace, proced
workspace = special:proced, on-created-empty:dyn_emacsclient -ce "(noct-with-q-to-exit (proced) (delete-other-windows))"

bind = $hotkey, k, togglespecialworkspace, calc
workspace = special:calc, on-created-empty:dyn_emacsclient -ce "(progn (calc) (delete-other-windows))"

bind = $hotkey, slash, togglespecialworkspace, woman
workspace = special:woman, on-created-empty:dyn_emacsclient -ce "(noct-with-global-completing-read (woman))"

# bind = $hotkey, g, togglespecialworkspace, gnus
# workspace = special:gnus, on-created-empty:dyn_emacsclient --socket-name waygnus -ce "(gnus)"

# mpv
bind = $hotkey, v, togglespecialworkspace, mpgo
workspace = special:mpgo, on-created-empty:wezterm start --always-new-process --workspace waympgo mpgosel
# open new windows outside the special workspace
windowrule = workspace +0, onworkspace:name:special:mpgo

bind = $hotkey+ALT, v, togglespecialworkspace, mplast
workspace = special:mplast, on-created-empty:wezterm start --always-new-process --workspace waymplast mplast
# open new windows outside the special workspace
windowrule = workspace +0, onworkspace:name:special:mplast

bind = $mod, space, togglespecialworkspace, way-shell-menu
workspace = special:way-shell-menu, on-created-empty:dyn_emacsclient --socket-name=shell-menu -ce '(noct-shell-menu)'

# ** Notifications
bind = $hotkey, comma, exec, makoctl dismiss --all

bind = $hotkey+ALT, comma, exec, makoctl restore
# this is left mod + altgr + comma
bind = $hotkey+SHIFT, 8, exec, makoctl restore

# * Window Management Keybindings
# ** General
# this closes, not kills
bind = $mod, w, killactive
bind = $mod+SHIFT, w, forcekillactive

bind = $mod, f, fullscreen, 0

# TODO make toggle size once have scroll layout working
# https://github.com/hyprwm/Hyprland/issues/2050#issuecomment-2090596596
# https://github.com/hyprwm/hyprland-plugins/issues/348
bind = $mod, m, fullscreen, 1

bind = $mod, v, togglefloating, active

# sticky... kind of
bind = $mod, c, pin, active

# ** Selection and Movement
bind = $mod, u, movefocus, l
bind = $mod, y, movefocus, r
bind = $mod, k, movefocus, d
bind = $mod, semicolon, movefocus, u

bind = $mod+SHIFT, u, movewindow, l
bind = $mod+SHIFT, y, movewindow, r
bind = $mod+SHIFT, k, movewindow, d
bind = $mod+SHIFT, semicolon, movewindow, u
# bind = $mod+SHIFT, u, layoutmsg, focus l
# bind = $mod+SHIFT, y, layoutmsg, focus r

bind = $mod, g, togglegroup

bind = $mod, l, exec, hy_switch_workspace previous
bind = $mod, q, focusurgentorlast

# ** Desktop Movement
bind = $mod, a, exec, hy_switch_workspace 1
bind = $mod, r, exec, hy_switch_workspace 2
bind = $mod, s, exec, hy_switch_workspace 3
bind = $mod, t, exec, hy_switch_workspace 4
bind = $mod, d, exec, hy_switch_workspace 5
bind = $mod, h, exec, hy_switch_workspace 6
bind = $mod, n, exec, hy_switch_workspace 7
bind = $mod, e, exec, hy_switch_workspace 8
bind = $mod, i, exec, hy_switch_workspace 9
bind = $mod, o, exec, hy_switch_workspace 10

bind = $mod+SHIFT, a, movetoworkspacesilent, 1
bind = $mod+SHIFT, r, movetoworkspacesilent, 2
bind = $mod+SHIFT, s, movetoworkspacesilent, 3
bind = $mod+SHIFT, t, movetoworkspacesilent, 4
bind = $mod+SHIFT, d, movetoworkspacesilent, 5
bind = $mod+SHIFT, h, movetoworkspacesilent, 6
bind = $mod+SHIFT, n, movetoworkspacesilent, 7
bind = $mod+SHIFT, e, movetoworkspacesilent, 8
bind = $mod+SHIFT, i, movetoworkspacesilent, 9
bind = $mod+SHIFT, o, movetoworkspacesilent, 10

# ** Monitor Movement
bind = $mod, comma, focusmonitor, +1
bind = $mod+SHIFT, comma, movecurrentworkspacetomonitor, +1

# ** Resizing
# TODO mode for resizing

# ** Misc
bind = , KP_Add, exec, hy_toggle_desktop
